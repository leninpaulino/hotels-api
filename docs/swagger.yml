openapi: 3.0.0
info:
  title: Hotels API
  description: This is sample API for accommodation listings
  version: 1.0
components:
  schemas:
    Accommodation:
      type: object
      examples:
        externalValue: "./item.json"
      properties:
        name:
          type: string
          minLength: 10
          pattern: "^(?!.*(Free|Offer|Book|Website)).*$"
          example: Example name
        rating:
          type: integer
          minimun: 0
          maximun: 5
          example: 5
        category:
          type: string
          enum: [hotel, alternative, hostel, lodge, resort, guesthouse]
          example: hotel
        location:
          type: object
          properties:
            city:
              type: string
              example: Cuernavaca
            state:
              type: string
              example: Morelos
            country:
              type: string
              example: Mexico
            zip_code:
              type: integer
              pattern: '^\d{5}$'
              example: 62448
            address:
              type: string
              example: Boulevard DÃ­az Ordaz No. 9 Cantarranas
        image:
          type: string
          format: uri
          example: image-url.com
        reputation:
          type: integer
          minimun: 0
          maximun: 1000
          example: 8990
        reputationBadge:
          type: string
          enum: [red, yellow, green]
          example: green
        price:
          type: integer
          example: 1000
        availability:
          type: integer
          example: 10
    ProblemDetails:
      type: object
      examples:
        externalValue: "./problemDetails.json"
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
    UserRegistration:
      type: object
      examples:
        externalValue: "./user.json"
      properties:
        name:
          type: string
          description: User's name
        email:
          type: string
          format: email
          description: User's email
        password:
          type: string
          description: User's password
  requestBodies:
    AccommodationBody:
      description: Accommodation to add to the system
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/Accommodation"
    UserRegistration:
      description: User registration data
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/UserRegistration"
  parameters:
    ProblemTypeParam:
      name: type
      in: path
      description: The problem identifier
      required: true
      schema:
        type: string
    AccommodationIdParam:
      name: accommodationId
      in: path
      description: The accommodation id
      required: true
      schema:
        type: integer
    ApiToken:
      name:
  responses:
    UnauthorizedError:
      description: Unauthorized request.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    NotFoundError:
      description: The resource could not be found.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    ErrorDetails:
      description: The problem details.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    AccommodationData:
      description: The accommodation data.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Accommodation"
    AccommodationsList:
      description: The accommodations list.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Accommodation"
securitySchemes:
  ApiTokenAuth:
    type: http
    scheme: bearer
    in: header
    name: Authorization

paths:
  /accommodations:
    get:
      description: Returns all accommodations from the system that the user has access to
      responses:
        "200":
          $ref: "#/components/responses/AccommodationsList"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
    post:
      description: Create a new accommodation
      requestBody:
        $ref: "#/components/requestBodies/AccommodationBody"
      responses:
        "201":
          $ref: "#/components/responses/AccommodationData"
        "400":
          $ref: "#/components/responses/ErrorDetails"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /accommodations/{accommodationId}:
    parameters:
      - $ref: "#/components/parameters/AccommodationIdParam"
    get:
      description: Returns all accommodations from the system that the user has access to
      responses:
        "200":
          $ref: "#/components/responses/AccommodationData"
        "400":
          $ref: "#/components/responses/ErrorDetails"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
    put:
      description: Update an existing accommodation
      requestBody:
        $ref: "#/components/requestBodies/AccommodationBody"
      responses:
        "200":
          $ref: "#/components/responses/AccommodationData"
        "400":
          $ref: "#/components/responses/ErrorDetails"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
    delete:
      description: Delete an accommodation
      responses:
        "204":
          description: The accommodation has been successfully deleted.
        "400":
          $ref: "#/components/responses/ErrorDetails"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
  /accommodations/{accommodationId}/book:
    parameters:
      - $ref: "#/components/parameters/AccommodationIdParam"
    post:
      description: Book an accommodation
      responses:
        "204":
          description: You have successfully booked an accommodation.
        "400":
          $ref: "#/components/responses/ErrorDetails"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
  /problems:
    get:
      description: Get all the problems that could be expected from the API
      responses:
        "200":
          description: The list of problems
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProblemDetails"
  /problems/{type}:
    parameters:
      - $ref: "#/components/parameters/ProblemTypeParam"
    get:
      description: Get details about an specific problem
      responses:
        "200":
          $ref: "#/components/responses/ErrorDetails"
        "404":
          $ref: "#/components/responses/NotFoundError"
  /register:
    post:
      security: []
      description: Register a new user in the API
      requestBody:
        $ref: "#/components/requestBodies/UserRegistration"
      responses:
        "201":
          $ref: "#/components/responses/User"
        "400":
          $ref: "#/components/responses/ErrorDetails"
security:
  - ApiTokenAuth: []
